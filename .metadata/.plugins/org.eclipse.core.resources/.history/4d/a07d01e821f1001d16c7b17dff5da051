package br.ufc.smd.poo.yanna.model.universidade;

import java.util.ArrayList;
import java.util.List;

public class Departament {

	private String name;
	
	private String acronym;

	private long code;

	private String description;
	
	private List<Professor> professors;
	
	private University university;

	
	public Departament(String name, String acronym, long code, String description) {
		super();
		this.name = name;
		this.acronym = acronym;
		this.code = code;
		this.description = description;
		this.professors = new ArrayList<Professor>();
		System.out.println("[DEPARMENT] '"+ this.acronym + "' was created succefully");
	}

	public String getAcronym() {
		return acronym;
	}

	public void setAcronym(String acronym) {
		this.acronym = acronym;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public long getCode() {
		return code;
	}

	public void setCode(long code) {
		this.code = code;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public University getUniversity() {
		return university;
	}

	public void setUniversity(University university) {
		this.university = university;
	}

	public List<Professor> getProfessors() {
		return professors;

	}


	public void addProfessor(long siape, String name, String cpf) {

	}

	public void addProfessor(Professor professor) {

		if (professor == null) {
			throw new NullPointerException("null professor is not allowed");
		}
		if (isProfessor(professor)) {
			System.err.println("[UNIVERSITY] Professor '"+ professor.getName() + "' was already on the professors list of " + this.acronym + ". It wasn't added.");
		} else {
			professors.add(professor);
			System.out.println("[UNIVERSITY] Professor '"+ professor.getName() + "' added succefully to the professors list of " + this.acronym + "!");
		}

	}
	
	public void showProfessors() {}

	public void getCourses() {}
	public void addCourse(long code, String name, String shift, long totalHours) {}
	
	public boolean isProfessor(Professor professor) {
		return professors.contains(professor);
	}
	
	public boolean isProfessor(long siape) {
		if (professors.isEmpty() == false) {
			for(Professor professor: professors) {
				if (professor.getSiape() == siape) {
					return true;
				}
			}
		}
		return false;
	}
}
